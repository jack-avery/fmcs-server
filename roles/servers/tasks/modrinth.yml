---
- name: Get Modrinth links
  modrinth:
    game_version: "{{ instance.minecraft_ver }}"
    loader: "{{ 'fabric' if 'fabric' in instance else 'forge' if 'forge' in instance }}"
    mods: "{{ instance.mods | default([]) }}"
    datapacks: "{{ instance.datapacks | default([]) }}"
  register: modrinth

- name: Delete old mods
  ansible.builtin.file:
    path: ~/{{ instance.name }}/mods
    state: absent

- name: Create mods folder
  ansible.builtin.file:
    path: ~/{{ instance.name }}/mods
    state: directory
    mode: 0755

- name: Download mods
  get_url:
    url: "{{ mod.link }}"
    dest: ~/{{ instance.name }}/mods/{{ mod.name }}.jar
  loop: "{{ modrinth.mods }}"
  loop_control:
    loop_var: mod

- name: Download mod overrides
  get_url:
    url: "{{ instance.mods[mod].source }}"
    dest: ~/{{ instance.name }}/mods/{{ mod }}.jar
  when: 'not instance.mods[mod] == None and "source" in instance.mods[mod]'
  loop: "{{ instance.mods.keys() }}"
  loop_control:
    loop_var: mod

- name: Ensure world folder exists (for datapacks)
  file:
    path: ~/{{ instance.name }}/world
    state: directory
    mode: 0775

- name: Delete old datapacks
  file:
    path: ~/{{ instance.name }}/world/datapacks
    state: absent

- name: Create datapacks folder
  file:
    path: ~/{{ instance.name }}/world/datapacks
    state: directory
    mode: 0775

- name: Download datapacks
  get_url:
    url: "{{ pack.link }}"
    dest: ~/{{ instance.name }}/world/datapacks/{{ pack.name }}.zip
  loop: "{{ modrinth.datapacks }}"
  loop_control:
    loop_var: pack

- name: Download datapack overrides
  get_url:
    url: "{{ instance.datapacks[pack].source }}"
    dest: ~/{{ instance.name }}/world/datapacks/{{ pack }}.zip
  when: 'instance.datapacks and not instance.datapacks[pack] == None and "source" in instance.datapacks[pack]'
  loop: "{{ instance.datapacks.keys() }}"
  loop_control:
    loop_var: pack
