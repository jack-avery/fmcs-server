---
- name: Setup
  include_tasks: setup.yml

- name: Generate perms
  include_tasks: gen_perms.yml
  loop: "{{ targets.instances }}"
  loop_control:
    loop_var: instance

- name: Enable whitelist if whitelist is created
  rcon:
    address: "{{ ansible_host }}"
    port: "{{ item.port + 1 }}"
    password: "{{ item.secrets.rcon_pass }}"
    command: "whitelist on"
  loop: "{{ targets.instances }}"
  timeout: 10
  delegate_to: localhost
  when: '"whitelist" in item'

- name: Tell servers to reload whitelist
  rcon:
    address: "{{ ansible_host }}"
    port: "{{ item.port + 1 }}"
    password: "{{ item.secrets.rcon_pass }}"
    command: "whitelist reload"
  loop: "{{ targets.instances }}"
  timeout: 10
  delegate_to: localhost
  when: '"whitelist" in item'

- name: Disable whitelist if whitelist is removed
  rcon:
    address: "{{ ansible_host }}"
    port: "{{ item.port + 1 }}"
    password: "{{ item.secrets.rcon_pass }}"
    command: "whitelist off"
  loop: "{{ targets.instances }}"
  timeout: 10
  delegate_to: localhost
  when: 'not "whitelist" in item'

- name: Inform whitelist update
  ignore_errors: true
  rcon:
    address: "{{ ansible_host }}"
    port: "{{ item.port + 1 }}"
    password: "{{ item.secrets.rcon_pass }}"
    command: "say Permissions updated."
  loop: "{{ targets.instances }}"
  timeout: 10
  delegate_to: localhost
