---
- name: Load secrets
  ansible.builtin.include_tasks: secrets.yml

- name: Delete old build data
  ansible.builtin.file:
    state: absent
    path: ~/build/{{ item.name }}
  loop: "{{ instances }}"

- name: Create build directory
  ansible.builtin.file:
    path: ~/build/{{ item.name }}
    state: directory
    mode: 0755
  loop: "{{ instances }}"

# - name: Copy files
#   ansible.posix.synchronize:
#     src: "{{ role_path }}/files/"
#     dest: ~/build/{{ item.name }}
#     recursive: true
#   loop: "{{ instances }}"

- name: Accept EULA
  shell: echo eula=true > ~/build/{{ item.name }}/eula.txt
  loop: "{{ instances }}"

- name: Generate whitelist.json
  copy:
    dest: ~/build/{{ item.name }}/whitelist.json
    content: "{{ item.whitelist | to_json }}"
  loop: "{{ instances_secrets }}"

- name: Generate ops.json
  copy:
    dest: ~/build/{{ item.name }}/ops.json
    content: "{{ ops | to_json }}"
  loop: "{{ instances }}"

- name: /server.properties
  ansible.builtin.template:
    src: server.properties.j2
    dest: ~/build/{{ item.0.name }}/server.properties
    mode: 0755
  loop: "{{ instances|zip(instances_secrets) }}"
  loop_control:
    index_var: loop0

- name: /Dockerfile
  ansible.builtin.template:
    src: Dockerfile.j2
    dest: ~/build/{{ item.name }}/Dockerfile
    mode: 0755
  loop: "{{ instances }}"

- name: /run.sh
  ansible.builtin.template:
    src: run.sh.j2
    dest: ~/build/{{ item.name }}/run.sh
    mode: 0755
  loop: "{{ instances }}"

- name: Prune space before building
  community.docker.docker_prune:
    images: true
    containers: true

- name: Build images
  community.docker.docker_image:
    name: "fmcs-{{ item.name }}"
    tag: "{{ item.name }}-latest"
    source: build
    build:
      path: ~/build/{{ item.name }}
      pull: true
    state: present
    force_source: true
    force_tag: true
  loop: "{{ instances }}"

- name: Start
  community.docker.docker_container:
    name: "fmcs-{{ item.name }}"
    image: "fmcs-{{ item.name }}:{{ item.name }}-latest"
    state: started
    restart: true
    volumes:
      - "~/worlds/{{ item.name }}:/fmcs/world"
      - "~/logs/{{ item.name }}:/fmcs/logs"
    ports:
      - "{{ mcs_base_port + (loop0 * 10) }}:{{ mcs_base_port + (loop0 * 10) }}"
      - "{{ mcs_base_port + (loop0 * 10) }}:{{ mcs_base_port + (loop0 * 10) }}/udp"
      - "{{ mcs_base_port + (loop0 * 10) + 1 }}:{{ mcs_base_port + (loop0 * 10) + 1 }}"
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0
